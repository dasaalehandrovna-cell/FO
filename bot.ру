import os
import json
import re
from datetime import datetime
from flask import Flask, request
import telebot

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = "https://fo-1.onrender.com"  # —Ç–≤–æ–π Render-–¥–æ–º–µ–Ω
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

DATA_FILE = "data.json"

# === –ó–ê–ì–†–£–ó–ö–ê/–°–û–•–†–ê–ù–ï–ù–ò–ï ===
def load_data():
    if not os.path.exists(DATA_FILE):
        return {"records": [], "balance": 0}
    with open(DATA_FILE, "r") as f:
        return json.load(f)

def save_data(data):
    with open(DATA_FILE, "w") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï ===
def parse_number(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç . , –∏ –ø—Ä–æ–±–µ–ª—ã)"""
    match = re.search(r"[-+]?[\d.,\s]+", text)
    if not match:
        return None
    num_str = match.group().replace(" ", "").replace(",", ".")
    try:
        return float(num_str)
    except:
        return None

def format_amount(value):
    return f"{value:,.0f}".replace(",", ".")

def format_records(records):
    grouped = {}
    for rec in records:
        h = rec["time"][:5]
        grouped.setdefault(h, []).append(rec)
    lines = []
    for h, items in grouped.items():
        lines.append(f"\nüïì {h}")
        for r in items:
            lines.append(f"{r['sign']}{format_amount(r['amount'])} {r['desc']}")
    return "\n".join(lines)

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–û–ë–©–ï–ù–ò–ô ===
@bot.message_handler(func=lambda m: True)
def handle_message(message):
    text = message.text.strip()
    if not text:
        return

    data = load_data()
    now = datetime.now()
    date_str = now.strftime("%Y-%m-%d")
    time_str = now.strftime("%H:%M")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∏—Å–ª–æ
    amount = parse_number(text)
    if amount is None:
        bot.reply_to(message, "–ù–µ –ø–æ–Ω—è–ª —Å—É–º–º—É üòÖ")
        return

    sign = "-" if not text.strip().startswith("+") else "+"
    desc = re.sub(r"[-+]?[\d.,\s]+", "", text).strip()

    # –ó–∞–ø–∏—Å—å
    record = {"date": date_str, "time": time_str, "amount": amount, "desc": desc, "sign": sign}
    data["records"].append(record)

    # –ü–µ—Ä–µ—Å—á—ë—Ç
    total = sum(r["amount"] if r["sign"] == "+" else -r["amount"] for r in data["records"])
    data["balance"] = total
    save_data(data)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –¥–Ω—è
    today_records = [r for r in data["records"] if r["date"] == date_str]
    income = sum(r["amount"] for r in today_records if r["sign"] == "+")
    expense = sum(r["amount"] for r in today_records if r["sign"] == "-")

    text_report = (
        f"üìÖ {date_str}\n\n"
        f"{format_records(today_records)}\n\n"
        f"üìà –ü—Ä–∏—Ö–æ–¥ –¥–Ω—è: {format_amount(income)}\n"
        f"üìâ –†–∞—Å—Ö–æ–¥ –¥–Ω—è: {format_amount(expense)}\n"
        f"üíµ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {format_amount(total)}"
    )

    # –ö–Ω–æ–ø–∫–∏
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_menu"))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –±—ã–ª–æ)
    if "last_msg_id" in data:
        try:
            bot.delete_message(message.chat.id, data["last_msg_id"])
        except:
            pass

    sent = bot.send_message(message.chat.id, text_report, reply_markup=markup)
    data["last_msg_id"] = sent.message_id
    save_data(data)

# === –ú–ï–ù–Æ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø ===
@bot.callback_query_handler(func=lambda call: call.data == "edit_menu")
def edit_menu(call):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(
        telebot.types.InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="edit_delete"),
        telebot.types.InlineKeyboardButton("üî¢ –ò–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ", callback_data="edit_change"),
    )
    markup.add(
        telebot.types.InlineKeyboardButton("‚ôªÔ∏è –û–±–Ω—É–ª–∏—Ç—å –≤—Å—ë", callback_data="edit_reset")
    )
    markup.add(
        telebot.types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cancel")
    )
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", call.message.chat.id, call.message.message_id, reply_markup=markup)

# === –£–î–ê–õ–ï–ù–ò–ï ===
@bot.callback_query_handler(func=lambda call: call.data == "edit_delete")
def edit_delete(call):
    bot.edit_message_text("–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å? (y/n)", call.message.chat.id, call.message.message_id)
    bot.register_next_step_handler(call.message, confirm_delete)

def confirm_delete(msg):
    if msg.text.lower() == "y":
        data = load_data()
        if data["records"]:
            data["records"].pop()
            save_data(data)
            bot.reply_to(msg, "‚úÖ –£–¥–∞–ª–µ–Ω–æ.")
        else:
            bot.reply_to(msg, "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
    else:
        bot.reply_to(msg, "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ.")

# === –ò–ó–ú–ï–ù–ï–ù–ò–ï ===
@bot.callback_query_handler(func=lambda call: call.data == "edit_change")
def edit_change(call):
    bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–ø—Ä–∏–º–µ—Ä: -500 –ø—Ä–æ–¥—É–∫—Ç—ã):", call.message.chat.id, call.message.message_id)
    bot.register_next_step_handler(call.message, handle_message)

# === –û–ë–ù–£–õ–ï–ù–ò–ï –í–°–ï–• –î–ê–ù–ù–´–• ===
@bot.callback_query_handler(func=lambda call: call.data == "edit_reset")
def edit_reset(call):
    bot.edit_message_text("–û–±–Ω—É–ª–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ? (y/n)", call.message.chat.id, call.message.message_id)
    bot.register_next_step_handler(call.message, confirm_reset)

def confirm_reset(msg):
    if msg.text.lower() == "y":
        save_data({"records": [], "balance": 0})
        bot.reply_to(msg, "‚úÖ –í—Å—ë –æ–±–Ω—É–ª–µ–Ω–æ.")
    else:
        bot.reply_to(msg, "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ.")

# === –ü–†–û–°–¢–û–ï –í–û–ó–í–†–ê–©–ï–ù–ò–ï ===
@bot.callback_query_handler(func=lambda call: call.data == "cancel")
def cancel_action(call):
    bot.delete_message(call.message.chat.id, call.message.message_id)

# === FLASK –î–õ–Ø WEBHOOK ===
@app.route("/" + TOKEN, methods=["POST"])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "ok", 200

@app.route("/", methods=["GET"])
def index():
    return "Bot is running!", 200

# === –ó–ê–ü–£–°–ö ===
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"{WEBHOOK_URL}/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
