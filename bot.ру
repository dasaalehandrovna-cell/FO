import telebot
import os
import json
from flask import Flask, request

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

DATA_FILE = "data.json"

data = {"balance": 0, "records": []}


def load_data():
    global data
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)


def save_data():
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)


@app.route("/" + TOKEN, methods=["POST"])
def getMessage():
    json_str = request.get_data().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "!", 200


@app.route("/")
def webhook():
    bot.remove_webhook()
    webhook_url = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}"
    bot.set_webhook(url=webhook_url)
    print(f"‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
    return "Webhook set", 200


@bot.message_handler(commands=["–±–∞–ª–∞–Ω—Å"])
def balance(message):
    bot.reply_to(message, f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data['balance']}‚ÇΩ")


@bot.message_handler(commands=["–æ—Ç—á–µ—Ç"])
def report(message):
    if not data["records"]:
        bot.reply_to(message, "üìò –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
        return
    text = "\n".join(data["records"])
    bot.reply_to(message, f"üìí –û—Ç—á–µ—Ç:\n{text}")


@bot.message_handler(commands=["—Å–±—Ä–æ—Å"])
def reset(message):
    data["balance"] = 0
    data["records"] = []
    save_data()
    bot.reply_to(message, "üîÑ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–±—Ä–æ—à–µ–Ω.")


@bot.message_handler(func=lambda msg: True)
def add_record(message):
    text = message.text.strip()
    if text.startswith("+") or text.startswith("-"):
        try:
            sign = 1 if text[0] == "+" else -1
            parts = text[1:].strip().split(" ", 1)
            amount = int(parts[0])
            note = parts[1] if len(parts) > 1 else ""
            data["balance"] += sign * amount
            record = f"{'+' if sign > 0 else '-'}{amount} {note}"
            data["records"].append(record)
            save_data()
            bot.reply_to(message, f"‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞. –ë–∞–ª–∞–Ω—Å: {data['balance']}‚ÇΩ")
        except:
            bot.reply_to(message, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ. –ü—Ä–∏–º–µ—Ä: +1000 —Ö–ª–µ–± –∏–ª–∏ -500 –±–µ–Ω–∑–∏–Ω")
    else:
        bot.reply_to(message, "‚ùó –ò—Å–ø–æ–ª—å–∑—É–π + –∏–ª–∏ - –¥–ª—è –∑–∞–ø–∏—Å–∏.")


if __name__ == "__main__":
    load_data()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
