# 9.8.6 –ø–æ—Å–ª–µ–¥

# ============================================
# –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç ‚Äî –≤–µ—Ä—Å–∏—è 9.8.6
# –û–±–Ω–æ–≤–ª–µ–Ω–æ: –ø–æ–¥–º–µ–Ω—é "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" —Å–æ–¥–µ—Ä–∂–∏—Ç CSV, –§–æ—Ä–≤–∞—Ä–¥, –ü–æ–ª—É—á–∞—Ç–µ–ª—å, –û–±–Ω—É–ª–∏—Ç—å, –ù–∞–∑–∞–¥
# –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å–æ —Å—Ç–∞—Ä–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π (CSV, webhook, –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–∫–Ω–∞ –∏ —Ç.–¥.)
# ============================================

import os
import json
import csv
import logging
import re
import threading
import time
from datetime import datetime
from zoneinfo import ZoneInfo

import telebot
from flask import Flask, request
from telebot import types

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–Ω–µ –º–µ–Ω—è–π, –µ—Å–ª–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏) ---
TOKEN = os.getenv("BOT_TOKEN")
OWNER_ID = os.getenv("OWNER_ID")  # —Å—Ç—Ä–æ–∫–∞ —Å —á–∏—Å–ª–æ–º –∏–ª–∏ None
APP_URL = os.getenv("APP_URL", "https://yourapp.onrender.com")
TZ = ZoneInfo("America/Argentina/Catamarca")
DATA_FILE = "data.json"
CSV_FILE = "data.csv"
LOG_FILE = "log.txt"
PORT = int(os.environ.get("PORT", 5000))
VERSION = "9.8.6"

if not TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

bot = telebot.TeleBot(TOKEN, threaded=True)
app = Flask(__name__)

# ----------------------------------------
# –§–£–ù–ö–¶–ò–Ø –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø –ß–ò–°–ï–õ
# ----------------------------------------
# ----------------------------------------
# –§–£–ù–ö–¶–ò–Ø –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø –ß–ò–°–ï–õ
# ----------------------------------------
def fmt_num(value):
    try:
        return f"{value:,.0f}".replace(",", ".")
    except Exception:
        return str(value)

# -----------------------------
# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# -----------------------------
logging.basicConfig(
    level=logging.INFO,
    format="[{asctime}] {levelname}: {message}",
    style="{",
    handlers=[logging.FileHandler(LOG_FILE, encoding="utf-8"), logging.StreamHandler()]
)

def log_info(msg):
    logging.info(msg)
def log_error(msg):
    logging.error(msg)

log_info(f"–°—Ç–∞—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –í–µ—Ä—Å–∏—è {VERSION}")

# -----------------------------
# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏ IO
# -----------------------------
def default_data():
    return {
        "overall_balance": 0,
        "records": [],
        "chats": {},
        "active_messages": {},
        "processed_messages": [],
        "forward_targets": [],    # –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ–æ—Ä–≤–∞—Ä–¥ —Ü–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä OWNER_ID)
        "tracked_messages": {},
        "next_id": 1
    }

def load_data():
    if os.path.exists(DATA_FILE):
        try:
            with open(DATA_FILE, "r", encoding="utf-8") as f:
                d = json.load(f)
        except Exception as e:
            log_error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è data.json: {e}")
            d = default_data()
    else:
        d = default_data()
    base = default_data()
    for k, v in base.items():
        if k not in d:
            d[k] = v
    return d

def save_data(d):
    try:
        with open(DATA_FILE, "w", encoding="utf-8") as f:
            json.dump(d, f, ensure_ascii=False, indent=2)
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è data.json: {e}")

data = load_data()

# –µ—Å–ª–∏ –∑–∞–¥–∞–Ω OWNER_ID ‚Äî –¥–æ–±–∞–≤–∏–º –µ–≥–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º)
if OWNER_ID:
    try:
        oi = int(OWNER_ID)
        if oi not in data.get("forward_targets", []):
            data["forward_targets"].append(oi)
            save_data(data)
    except Exception:
        pass

# -----------------------------
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ
# -----------------------------
def get_today_key():
    return datetime.now(TZ).strftime("%Y-%m-%d")

def get_chat_store(chat_id):
    cid = str(chat_id)
    if cid not in data["chats"]:
        data["chats"][cid] = {
            "balance": 0,
            "records": [],
            "next_id": 1,
            "daily_records": {},
            "active_windows": {},
            "edit_wait": None,
            "edit_target": None,
            "forward_enabled": False,    # per-chat toggle for forwarding
            "forward_target_id": None    # per-chat target for forwarding (None -> use OWNER_ID if set)
        }
        save_data(data)
    # Ensure backward compatibility: if store exists but lacks new keys, set them
    store = data["chats"][cid]
    if "forward_enabled" not in store:
        store["forward_enabled"] = False
    if "forward_target_id" not in store:
        store["forward_target_id"] = None
    save_data(data)
    return store

def set_today_active_window(chat_id, message_id):
    today = get_today_key()
    if "active_messages" not in data:
        data["active_messages"] = {}
    if today not in data["active_messages"]:
        data["active_messages"][today] = {}
    data["active_messages"][today][str(chat_id)] = message_id
    save_data(data)

# -----------------------------
# –†–∞–±–æ—Ç–∞ —Å –∑–∞–ø–∏—Å—è–º–∏
# -----------------------------
def add_record_to_chat(chat_id, amount, note, owner):
    store = get_chat_store(chat_id)
    rid = data.get("next_id", 1)
    rec = {
        "id": rid,
        "short_id": f"R{rid}",
        "timestamp": datetime.now(TZ).isoformat(timespec="seconds"),
        "amount": amount,
        "note": note,
        "owner": owner
    }
    data.setdefault("records", []).append(rec)
    store.setdefault("records", []).append(rec)
    day = get_today_key()
    store.setdefault("daily_records", {}).setdefault(day, []).append(rec)
    store["balance"] = store.get("balance", 0) + amount
    data["overall_balance"] = data.get("overall_balance", 0) + amount
    data["next_id"] = rid + 1
    save_data(data)
    try:
        export_to_csv(data)
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –≤ CSV –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {e}")

    # –§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤–ª–∞–¥–µ–ª—å—Ü—É –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
    try:
        if store.get("forward_enabled"):
            # –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∞—Ä–≥–µ—Ç ‚Äî per-chat forward_target_id, –∏–Ω–∞—á–µ OWNER_ID (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω)
            target = store.get("forward_target_id")
            if not target and OWNER_ID:
                try:
                    target = int(OWNER_ID)
                except:
                    target = None
            if target:
                try:
                    bot.send_message(
                        int(target),
                        # f"üì® –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∏–∑ —á–∞—Ç–∞ {chat_id}:\n"
                        # f"üÜî {rec['short_id']}\n"
                        f"üí∞ {rec['amount']} ARS\n"
                        # f"üìù {rec.get('note','')}\n"
                        # f"‚è± {rec.get('timestamp')}"
                    )
                except Exception as e:
                    log_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –∑–∞–ø–∏—Å—å (target {target}): {e}")
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∑–∞–ø–∏—Å–∏: {e}")

    return rec

def update_record_in_chat(chat_id, rid, new_amount, new_note, user=None):
    store = get_chat_store(chat_id)
    found = None
    for r in store.get("records", []):
        if r["id"] == rid:
            old = r.copy()
            r["amount"] = new_amount
            r["note"] = new_note
            found = r
            break
    if found:
        for day_recs in store.get("daily_records", {}).values():
            for r in day_recs:
                if r["id"] == rid:
                    r.update(found)
        store["balance"] = sum([x["amount"] for x in store.get("records", [])])
        data["overall_balance"] = sum([x["amount"] for x in data.get("records", [])])
        save_data(data)
        try:
            export_to_csv(data)
        except:
            pass
        user_repr = f"{user.id}/{user.username}" if user else "unknown"
        log_info(f"Edit by {user_repr}: R{rid} -> amount={new_amount}, note='{new_note}'")
        return True, found
    return False, None

def delete_record_in_chat(chat_id, rid, user=None):
    store = get_chat_store(chat_id)
    removed = None
    for r in list(store.get("records", [])):
        if r["id"] == rid or str(r["id"]) == str(rid) or r.get("short_id") == f"R{rid}":
            removed = r
            store["records"].remove(r)
            break
    if removed:
        for day_key, recs in store.get("daily_records", {}).items():
            store["daily_records"][day_key] = [x for x in recs if x["id"] != rid]
        store["balance"] = sum([x["amount"] for x in store.get("records", [])])
        data["records"] = [x for x in data.get("records", []) if x["id"] != rid]
        data["overall_balance"] = sum([x["amount"] for x in data.get("records", [])])
        save_data(data)
        try:
            export_to_csv(data)
        except:
            pass
        user_repr = f"{user.id}/{user.username}" if user else "unknown"
        log_info(f"Delete by {user_repr}: R{rid} removed")
        return True, removed
    return False, None

def export_to_csv(d):
    try:
        with open(CSV_FILE, "w", newline='', encoding="utf-8") as f:
            writer = csv.writer(f)
            writer.writerow(["chat_id","ID","short_id","timestamp","amount","note","owner","day_key"])
            for cid, cdata in d.get("chats", {}).items():
                for day_key, records in cdata.get("daily_records", {}).items():
                    for r in records:
                        writer.writerow([cid, r.get("id"), r.get("short_id"), r.get("timestamp"), r.get("amount"), r.get("note"), r.get("owner"), day_key])
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV: {e}")

# -----------------------------
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# -----------------------------
def build_main_keyboard(chat_id=None, confirm_reset=False):
    kb = types.InlineKeyboardMarkup(row_width=2)
    kb.row(
        types.InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="btn_balance"),
        types.InlineKeyboardButton("üìä –û—Ç—á—ë—Ç", callback_data="btn_report"),
        types.InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="btn_edit_menu"))
    kb.row(
        types.InlineKeyboardButton("üöÄ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="btn_start"),
        types.InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ", callback_data="btn_cod")
    )
    balance_text = ""
    if chat_id is not None:
        store = get_chat_store(chat_id)
        balance_text = f"üí∞ {fmt_num(store.get('balance', 0))} ARS"
    kb.add(types.InlineKeyboardButton(balance_text or "üí∞ 0 ARS", callback_data="noop"))
    return kb


def build_edit_menu_keyboard(chat_id=None):
    kb = types.InlineKeyboardMarkup(row_width=2)
    kb.row(types.InlineKeyboardButton("üìÇ CSV", callback_data="btn_csv"))
    kb.row(
        types.InlineKeyboardButton("üì® –§–æ—Ä–≤–∞—Ä–¥", callback_data="btn_toggle_forward"),
        types.InlineKeyboardButton("üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å", callback_data="btn_set_forward_target")
    )
    kb.row(
        types.InlineKeyboardButton("‚öôÔ∏è –û–±–Ω—É–ª–∏—Ç—å", callback_data="btn_reset"),
        types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )
    return kb

def build_edit_keyboard_for_record(rid):
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –±—ã—Å—Ç—Ä—ã–µ –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É–º–º—ã
    kb.row(
        types.InlineKeyboardButton("+10", callback_data=f"preset_add_{rid}_10"),
        types.InlineKeyboardButton("-10", callback_data=f"preset_add_{rid}_-10")
    )
    kb.row(
        types.InlineKeyboardButton("+100", callback_data=f"preset_add_{rid}_100"),
        types.InlineKeyboardButton("-100", callback_data=f"preset_add_{rid}_-100")
    )
    kb.row(
        types.InlineKeyboardButton("+500", callback_data=f"preset_add_{rid}_500"),
        types.InlineKeyboardButton("-500", callback_data=f"preset_add_{rid}_-500")
    )
    kb.add(types.InlineKeyboardButton("‚úè –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data=f"edit_manual_{rid}"))
    kb.add(types.InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"edit_delete_{rid}"))
    kb.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="edit_back_to_list"))
    return kb

def build_confirm_delete_keyboard(rid):
    kb = types.InlineKeyboardMarkup(row_width=2)
    kb.row(types.InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_{rid}"),
           types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete"))
    return kb

# -----------------------------
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ/—Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
# -----------------------------
def update_or_send_today_window(chat_id, create_if_missing=True):
    today_key = get_today_key()
    store = get_chat_store(chat_id)
    day_records = store.get("daily_records", {}).get(today_key, [])

    daily_income = sum(r["amount"] for r in day_records if r["amount"] > 0)
    daily_expense = sum(r["amount"] for r in day_records if r["amount"] < 0)
    overall_balance = store.get("balance", 0)

    if not day_records:
        text = (
            f"üìÖ {today_key}\n"
            f"–ü–æ–∫–∞ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π.\n"
            f"üíµ –ü—Ä–∏—Ö–æ–¥: {fmt_num(daily_income)} ARS\n"
            f"üí∏ –†–∞—Å—Ö–æ–¥: {fmt_num(abs(daily_expense))} ARS\n"
            f"üí∞ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {fmt_num(overall_balance)} ARS"
        )
    else:
        lines = [f"üìÖ {today_key}", "üìã –û–ø–µ—Ä–∞—Ü–∏–∏:"]
        for r in day_records[-50:]:
            sign = "+" if r["amount"] > 0 else "-"
            lines.append(f"{r['short_id']}: {sign}{fmt_num(abs(r['amount']))} ‚Äî {r.get('note','')}")
        lines.append(
            f"\nüíµ –ü—Ä–∏—Ö–æ–¥: {fmt_num(daily_income)} ARS\n"
            f"üí∏ –†–∞—Å—Ö–æ–¥: {fmt_num(abs(daily_expense))} ARS\n"
            f"üí∞ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {fmt_num(overall_balance)} ARS"
        )
        text = "\n".join(lines)

    kb = build_main_keyboard(chat_id)
    # –î–æ–±–∞–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ñ–æ—Ä–≤–∞—Ä–¥–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ‚Äî –æ—Å—Ç–∞–≤–∏–º –≤ —Ç–µ–∫—Å—Ç–µ –æ–∫–Ω–∞
    try:
        forward_info = ""
        if store.get("forward_enabled"):
            tgt = store.get("forward_target_id") or OWNER_ID
            forward_info = f"\n\nüì® –ü–µ—Ä–µ—Å—ã–ª–∫–∞: –í–∫–ª—é—á–µ–Ω–∞ ‚Üí {tgt}"
        else:
            forward_info = f"\n\nüì® –ü–µ—Ä–µ—Å—ã–ª–∫–∞: –í—ã–∫–ª—é—á–µ–Ω–∞"
        text = text + forward_info
    except:
        pass

    today_msgs = data.setdefault("active_messages", {}).setdefault(get_today_key(), {})
    active_id = today_msgs.get(str(chat_id))

    if active_id:
        try:
            bot.edit_message_text(text, chat_id, active_id, reply_markup=kb)
        except telebot.apihelper.ApiException as e:
            log_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–∫–Ω–æ {active_id} –¥–ª—è —á–∞—Ç–∞ {chat_id}: {e}")
        return

    if not create_if_missing:
        return

    try:
        sent = bot.send_message(chat_id, text, reply_markup=kb)
        set_today_active_window(chat_id, sent.message_id)
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è {chat_id}: {e}")

# -----------------------------
# Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
# -----------------------------
@bot.callback_query_handler(func=lambda c: True)
def handle_callback(call):
    try:
        chat_id = call.message.chat.id
    except Exception:
        return
    store = get_chat_store(chat_id)
    today_key = get_today_key()
    day_records = store.get("daily_records", {}).get(today_key, [])
    today_msgs = data.setdefault("active_messages", {}).setdefault(today_key, {})
    active_id = today_msgs.get(str(chat_id))

    # –ü–æ–¥–º–µ–Ω—é "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
    if call.data == "btn_edit_menu":
        text = (
            "‚úèÔ∏è –ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n"
            "üìÇ CSV ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö\n"
            "üì® –§–æ—Ä–≤–∞—Ä–¥ ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫—É\n"
            "üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å ‚Äî –∑–∞–¥–∞—Ç—å ID –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏\n"
            "‚öôÔ∏è –û–±–Ω—É–ª–∏—Ç—å ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ\n"
        )
        if active_id:
            try:
                bot.edit_message_text(text, chat_id, active_id, reply_markup=build_edit_menu_keyboard(chat_id))
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–¥–º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        else:
            try:
                sent = bot.send_message(chat_id, text, reply_markup=build_edit_menu_keyboard(chat_id))
                set_today_active_window(chat_id, sent.message_id)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        bot.answer_callback_query(call.id)
        return

    # –ë–∞–ª–∞–Ω—Å
    if call.data == "btn_balance":
        daily_income = sum(r["amount"] for r in day_records if r["amount"] > 0)
        daily_expense = sum(r["amount"] for r in day_records if r["amount"] < 0)
        overall_balance = store.get("balance", 0)
        text = (
            f"üìÖ {today_key}\n\n"
            f"üí∞ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {fmt_num(overall_balance)} ARS\n"
            f"üíµ –ü—Ä–∏—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {fmt_num(daily_income)} ARS\n"
            f"üí∏ –†–∞—Å—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {fmt_num(abs(daily_expense))} ARS"
        )
        if active_id:
            try:
                bot.edit_message_text(text, chat_id, active_id, reply_markup=build_main_keyboard(chat_id))
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–∫–Ω–∞ (–ë–∞–ª–∞–Ω—Å): {e}")
        else:
            update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—ë–Ω ‚úÖ")
        return

    # –û—Ç—á—ë—Ç
    if call.data == "btn_report":
        expenses = [r for r in day_records if r["amount"] < 0]
        daily_expense_total = sum(abs(r["amount"]) for r in expenses)
        if not expenses:
            text = f"üìÖ {today_key}\n–ü–æ–∫–∞ –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è.\nüí∏ –†–∞—Å—Ö–æ–¥ –∑–∞ –¥–µ–Ω—å: 0 ARS"
        else:
            lines = [f"üìÖ {today_key}", "üìã –†–∞—Å—Ö–æ–¥—ã –∑–∞ –¥–µ–Ω—å:"]
            for r in expenses[-30:]:
                lines.append(f"{r['short_id']}: -{abs(r['amount'])} ‚Äî {r.get('note','')}")
            lines.append(f"\nüí∏ –†–∞—Å—Ö–æ–¥ –∑–∞ –¥–µ–Ω—å: {fmt_num(daily_expense_total)} ARS")
            text = "\n".join(lines)
        if active_id:
            try:
                bot.edit_message_text(text, chat_id, active_id, reply_markup=build_main_keyboard(chat_id))
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–∫–Ω–∞ (–û—Ç—á—ë—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤): {e}")
        else:
            update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–û—Ç—á—ë—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –æ–±–Ω–æ–≤–ª—ë–Ω üìä")
        return

    # CSV
    if call.data == "btn_csv":
        try:
            with open(CSV_FILE, "rb") as f:
                bot.send_document(chat_id, f, caption="üìÇ –í–∞—à —Ñ–∞–π–ª data.csv")
            bot.answer_callback_query(call.id, "CSV –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω üìÅ")
        except Exception as e:
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ CSV: {e}")
            bot.answer_callback_query(call.id)
        return

    # Toggle forward (–≤–∫–ª/–≤—ã–∫–ª –ø–µ—Ä–µ—Å—ã–ª–∫—É)
    if call.data == "btn_toggle_forward":
        store["forward_enabled"] = not store.get("forward_enabled", False)
        save_data(data)
        status = "–≤–∫–ª—é—á–µ–Ω–∞ ‚úÖ" if store["forward_enabled"] else "–≤—ã–∫–ª—é—á–µ–Ω–∞ ‚ùå"
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, f"–ü–µ—Ä–µ—Å—ã–ª–∫–∞ {status}")
        return

    # Set forward target (–∑–∞–ø—Ä–æ—Å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è)
    if call.data == "btn_set_forward_target":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
        try:
            bot.answer_callback_query(call.id)
            sent = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∑–∞–ø–∏—Å–∏ (–∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 0, —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å):")
            bot.register_next_step_handler(sent, process_forward_target)
        except Exception as e:
            log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {e}")
            bot.answer_callback_query(call.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
        return

    # reset button now just points to command
    if call.data == "btn_reset":
        if active_id:
            try:
                bot.edit_message_text("–î–ª—è –æ–±–Ω—É–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /reset (–≤–≤–µ–¥–∏—Ç–µ `/reset` –≤ —á–∞—Ç–µ).", chat_id, active_id, reply_markup=build_main_keyboard(chat_id))
            except:
                pass
        bot.answer_callback_query(call.id)
        return

    # confirm_reset (from /reset command's inline keyboard)
    if call.data == "confirm_reset":
        # –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        store["records"] = []
        store["daily_records"] = {}
        store["balance"] = 0
        # —É–¥–∞–ª—è–µ–º –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤—Å–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏–µ —ç—Ç–æ–º—É —á–∞—Ç—É (owner may be user id; keep simple: remove by matching owner==chat_id)
        data["records"] = [x for x in data.get("records", []) if x.get("owner") != chat_id]
        try:
            data["overall_balance"] = sum([x["amount"] for x in data.get("records", [])])
        except:
            data["overall_balance"] = 0
        save_data(data)
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã üßπ")
        return

    if call.data == "cancel_reset":
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–û—Ç–º–µ–Ω–∞")
        return

    # –û–±–Ω–æ–≤–∏—Ç—å
    if call.data == "btn_start":
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–û–∫–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ üîÑ")
        return

    # –ò–Ω—Ñ–æ (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ)
    if call.data == "btn_cod":
        info_text = (
            f"‚ÑπÔ∏è –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç ‚Äî –≤–µ—Ä—Å–∏—è {VERSION}\n\n"
            "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ –æ—Ç—á—ë—Ç–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
            "/balance - –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –∑–∞ –¥–µ–Ω—å\n"
            "/report - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è\n"
            "/csv - –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—Ä–∏–µ–π –æ–ø–µ—Ä–∞—Ü–∏–π\n"
            "/reset - –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ (–ø–æ–∫–∞–∂–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)\n"
            "/info - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –æ–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥\n\n"
            "üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π (—Ñ–æ—Ä–º–∞—Ç—ã):\n"
            "+500 –ó–∞—Ä–ø–ª–∞—Ç–∞    (–∏–ª–∏ ^+^500^)\n"
            "-150 –û–±–µ–¥       (–∏–ª–∏ ^-^150^)\n\n"
            "‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ ¬´‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å¬ª, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ CSV, —Ñ–æ—Ä–≤–∞—Ä–¥ –∏ –æ–±–Ω—É–ª–µ–Ω–∏–µ.\n"
            "üì® –ö–Ω–æ–ø–∫–∞ ¬´–§–æ—Ä–≤–∞—Ä–¥¬ª –≤–∫–ª—é—á–∞–µ—Ç –ø–µ—Ä–µ—Å—ã–ª–∫—É –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤–ª–∞–¥–µ–ª—å—Ü—É –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é."
        )
        if active_id:
            try:
                bot.edit_message_text(info_text, chat_id, active_id, reply_markup=build_main_keyboard(chat_id))
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–∫–Ω–∞ (–ò–Ω—Ñ–æ): {e}")
        else:
            try:
                sent = bot.send_message(chat_id, info_text, reply_markup=build_main_keyboard(chat_id))
                set_today_active_window(chat_id, sent.message_id)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ: {e}")
        bot.answer_callback_query(call.id)
        return

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π (unchanged behavior)
    if call.data == "btn_edit_list":
        if not day_records:
            text = f"üìÖ {today_key}\n–ü–æ–∫–∞ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è."
            if active_id:
                try:
                    bot.edit_message_text(text, chat_id, active_id, reply_markup=build_main_keyboard(chat_id))
                except telebot.apihelper.ApiException as e:
                    log_error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–∫–Ω–∞ (–ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è): {e}")
            else:
                update_or_send_today_window(chat_id)
            bot.answer_callback_query(call.id, "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return

        lines = [f"üìÖ {today_key}", "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø–∏—Å—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"]
        kb = types.InlineKeyboardMarkup(row_width=1)
        for r in reversed(day_records[-20:]):
            sign = "+" if r["amount"] > 0 else "-"
            label = f"{r['short_id']}: {sign}{abs(r['amount'])} ‚Äî {r.get('note','')}"
            kb.add(types.InlineKeyboardButton(label, callback_data=f"rec_{r['id']}"))
        kb.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"))
        text = "\n".join(lines)
        if active_id:
            try:
                bot.edit_message_text(text, chat_id, active_id, reply_markup=kb)
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        else:
            try:
                sent = bot.send_message(chat_id, text, reply_markup=kb)
                set_today_active_window(chat_id, sent.message_id)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        bot.answer_callback_query(call.id)
        return

    # –í—ã–±–æ—Ä –∑–∞–ø–∏—Å–∏
    if call.data and call.data.startswith("rec_"):
        try:
            rid = int(call.data.split("_",1)[1])
        except:
            bot.answer_callback_query(call.id, "–ù–µ–≤–µ—Ä–Ω—ã–π ID")
            return
        rec = None
        for r in day_records:
            if r["id"] == rid:
                rec = r
                break
        if not rec:
            bot.answer_callback_query(call.id, "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        sign = "+" if rec["amount"] > 0 else "-"
        text = f"–ó–∞–ø–∏—Å—å {rec['short_id']}\n{sign}{abs(rec['amount'])} ‚Äî {rec.get('note','')}\n–î–æ–±–∞–≤–ª–µ–Ω–∞: {rec.get('timestamp')}"
        kb = build_edit_keyboard_for_record(rid)
        if active_id:
            try:
                bot.edit_message_text(text, chat_id, active_id, reply_markup=kb)
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏: {e}")
        else:
            try:
                sent = bot.send_message(chat_id, text, reply_markup=kb)
                set_today_active_window(chat_id, sent.message_id)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏: {e}")
        bot.answer_callback_query(call.id)
        return

    # –ü—Ä–µ—Å–µ—Ç—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É–º–º—ã
    if call.data and call.data.startswith("preset_add_"):
        # —Ñ–æ—Ä–º–∞—Ç preset_add_{rid}_{delta}
        parts = call.data.split("_")
        try:
            rid = int(parts[2])
            delta = int(parts[3])
        except:
            bot.answer_callback_query(call.id, "–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
            return
        # –Ω–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å—å
        success = False
        for r in store.get("records", []):
            if r["id"] == rid:
                new_amount = r["amount"] + delta
                new_note = r.get("note","")
                user = call.from_user
                success, _ = update_record_in_chat(chat_id, rid, new_amount, new_note, user=user)
                break
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–°—É–º–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞" if success else "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å")
        return

    # –í–≤–æ–¥ –≤—Ä—É—á–Ω—É—é (—Ñ–æ–ª–ª–±—ç–∫) ‚Äî –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
    if call.data and call.data.startswith("edit_manual_"):
        try:
            rid = int(call.data.split("_",2)[2])
        except:
            bot.answer_callback_query(call.id, "–ù–µ–≤–µ—Ä–Ω—ã–π ID")
            return
        store["edit_wait"] = "change_value"
        store["edit_target"] = rid
        save_data(data)
        bot.send_message(chat_id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É –∏ –∑–∞–º–µ—Ç–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ R{rid} –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n+500 –ó–∞—Ä–ø–ª–∞—Ç–∞  –∏–ª–∏  ^+^500^ –ó–∞—Ä–ø–ª–∞—Ç–∞  –∏–ª–∏  ^-^150^ –û–±–µ–¥")
        bot.answer_callback_query(call.id)
        return

    # –£–¥–∞–ª–∏—Ç—å (–ø–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
    if call.data and call.data.startswith("edit_delete_"):
        try:
            rid = int(call.data.split("_",2)[2])
        except:
            bot.answer_callback_query(call.id, "–ù–µ–≤–µ—Ä–Ω—ã–π ID")
            return
        if active_id:
            try:
                bot.edit_message_text(f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ R{rid}:", chat_id, active_id, reply_markup=build_confirm_delete_keyboard(rid))
            except telebot.apihelper.ApiException as e:
                log_error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        else:
            try:
                sent = bot.send_message(chat_id, f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ R{rid}:", reply_markup=build_confirm_delete_keyboard(rid))
                set_today_active_window(chat_id, sent.message_id)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        bot.answer_callback_query(call.id)
        return

    # –ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ
    if call.data and call.data.startswith("confirm_delete_"):
        try:
            rid = int(call.data.split("_",2)[2])
        except:
            bot.answer_callback_query(call.id, "–ù–µ–≤–µ—Ä–Ω—ã–π ID")
            return
        success, _ = delete_record_in_chat(chat_id, rid, user=call.from_user)
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞" if success else "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return

    if call.data == "cancel_delete":
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id, "–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è")
        return

    if call.data in ("back_to_main", "edit_back_to_list", "edit_back"):
        update_or_send_today_window(chat_id)
        bot.answer_callback_query(call.id)
        return

    if call.data == "noop":
        bot.answer_callback_query(call.id)
        return

    bot.answer_callback_query(call.id)
    return

# -----------------------------
# Regex –¥–ª—è —Å—É–º–º: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º +500, -150 –∏ —Ñ–æ—Ä–º–∞—Ç—ã ^+^500^ –∏–ª–∏ ^-^150^
# -----------------------------
num_re = re.compile(r'(\^?[+-]?\^?\s*\d+\^?|\^[+-]\^[\d]+|\+?-?\d+)')

def parse_amount_token(token:str):
    t = token.strip()
    # –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤ ^+^500^ –∏–ª–∏ ^-^150^ –∏–ª–∏ +500 / -150 / 200
    # —É–±–µ—Ä—ë–º —Å–∏–º–≤–æ–ª—ã ^ –µ—Å–ª–∏ –µ—Å—Ç—å
    t = t.replace("^", "")
    t = t.replace(" ", "")
    if t.startswith("+"):
        return int(t[1:])
    if t.startswith("-"):
        return -int(t[1:])
    # –µ—Å–ª–∏ –±–µ–∑ –∑–Ω–∞–∫–∞ ‚Äî —Å—á–∏—Ç–∞–µ–º —Ä–∞—Å—Ö–æ–¥ (–∫–∞–∫ —É —Ç–µ–±—è –≤ –∫–æ–¥–µ)
    return -int(t)

# -----------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è —Ñ–æ—Ä–≤–∞—Ä–¥–∞ (next-step)
# -----------------------------
def process_forward_target(message):
    try:
        chat_id = message.chat.id
        store = get_chat_store(chat_id)
        text = (message.text or "").strip()

        if text == "0":
            store["forward_target_id"] = None
            save_data(data)
            bot.send_message(chat_id, "‚úÖ –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–±—Ä–æ—à–µ–Ω (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è OWNER_ID, –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω).")
            update_or_send_today_window(chat_id)
            return

        text = text.strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ ID
        if not (text.startswith("-") or text.isdigit()):
            bot.send_message(chat_id, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –ü—Ä–∏–º–µ—Ä: -1001234567890\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 0 –¥–ª—è —Å–±—Ä–æ—Å–∞.")
            return

        # –ü–æ–ø—ã—Ç–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ
        try:
            target = int(text)
        except Exception:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return

        store["forward_target_id"] = target
        save_data(data)
        bot.send_message(chat_id, f"‚úÖ –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –∏–¥—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target}.")
        update_or_send_today_window(chat_id)

    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ process_forward_target: {e}")
        try:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        except:
            pass

# -----------------------------
# –í—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–º–∞–Ω–¥—ã
# -----------------------------
@bot.message_handler(commands=["start", "info"])
def cmd_start(msg):
    chat_id = msg.chat.id
    update_or_send_today_window(chat_id, create_if_missing=True)

@bot.message_handler(commands=["balance"])
def cmd_balance(msg):
    chat_id = msg.chat.id
    store = get_chat_store(chat_id)
    today_key = get_today_key()
    day_records = store.get("daily_records", {}).get(today_key, [])
    daily_income = sum(r["amount"] for r in day_records if r["amount"] > 0)
    daily_expense = sum(r["amount"] for r in day_records if r["amount"] < 0)
    overall_balance = store.get("balance", 0)
    text = (
        f"üìÖ {today_key}\n\n"
        f"üí∞ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {overall_balance} ARS\n"
        f"üíµ –ü—Ä–∏—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {daily_income} ARS\n"
        f"üí∏ –†–∞—Å—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {abs(daily_expense)} ARS"
    )
    bot.send_message(chat_id, text)

@bot.message_handler(commands=["report"])
def cmd_report(msg):
    chat_id = msg.chat.id
    store = get_chat_store(chat_id)
    today_key = get_today_key()
    day_records = store.get("daily_records", {}).get(today_key, [])
    expenses = [r for r in day_records if r["amount"] < 0]
    if not expenses:
        bot.send_message(chat_id, f"üìÖ {today_key}\n–ü–æ–∫–∞ –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è.\nüí∏ –†–∞—Å—Ö–æ–¥ –∑–∞ –¥–µ–Ω—å: 0 ARS")
        return
    lines = [f"üìÖ {today_key}", "üìã –†–∞—Å—Ö–æ–¥—ã –∑–∞ –¥–µ–Ω—å:"]
    for r in expenses[-30:]:
        lines.append(f"{r['short_id']}: -{abs(r['amount'])} ‚Äî {r.get('note','')}")
    lines.append(f"\nüí∏ –†–∞—Å—Ö–æ–¥ –∑–∞ –¥–µ–Ω—å: {sum(abs(r['amount']) for r in expenses)} ARS")
    bot.send_message(chat_id, "\n".join(lines))

@bot.message_handler(commands=["csv"])
def cmd_csv(msg):
    chat_id = msg.chat.id
    try:
        with open(CSV_FILE, "rb") as f:
            bot.send_document(chat_id, f, caption="üìÇ –í–∞—à —Ñ–∞–π–ª data.csv")
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ CSV: {e}")

@bot.message_handler(commands=["reset"])
def cmd_reset(msg):
    chat_id = msg.chat.id
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ –≤–∏–¥–µ inline-–∫–Ω–æ–ø–æ–∫
    kb = types.InlineKeyboardMarkup(row_width=2)
    kb.row(types.InlineKeyboardButton("‚úÖ –î–∞, –æ–±–Ω—É–ª–∏—Ç—å", callback_data="confirm_reset"),
           types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_reset"))
    bot.send_message(chat_id, "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω—É–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ–≥–æ —á–∞—Ç–∞? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.", reply_markup=kb)

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda m: True)
def handle_message(msg):
    chat_id = msg.chat.id
    store = get_chat_store(chat_id)
    wait_action = store.get("edit_wait")

    # –ï—Å–ª–∏ –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if wait_action == "change_value":
        rid = store.get("edit_target")
        if not rid:
            store["edit_wait"] = None
            store["edit_target"] = None
            save_data(data)
            return
        parts = msg.text.strip().split(" ", 1)
        try:
            amount_token = parts[0]
            amount = parse_amount_token(amount_token)
            note = parts[1] if len(parts) > 1 else ""
            success, _ = update_record_in_chat(chat_id, rid, amount, note, user=msg.from_user)
            store["edit_wait"] = None
            store["edit_target"] = None
            save_data(data)
            update_or_send_today_window(chat_id)
            bot.send_message(chat_id, f"‚úÖ –ó–∞–ø–∏—Å—å R{rid} {'–∏–∑–º–µ–Ω–µ–Ω–∞' if success else '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}")
        except Exception as e:
            log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤—Ä—É—á–Ω—É—é: {e}")
            bot.send_message(chat_id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ —Å—É–º–º—ã. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +500 –ó–∞—Ä–ø–ª–∞—Ç–∞ –∏–ª–∏ ^+^500^ –ó–∞—Ä–ø–ª–∞—Ç–∞ –∏–ª–∏ ^-^150^ –û–±–µ–¥")
        return

    # –û–±—ã—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏. –ù–∞—Ö–æ–¥–∏–º —Ç–æ–∫–µ–Ω —Å —Å—É–º–º–æ–π.
    if not msg.text:
        return
    # –ù–∞–π–¥—ë–º –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —á–∏—Å–ª–∞ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º ^+^ / ^-^)
    m = re.search(r'(\^[+-]\^[0-9]+|\^[+-]?[0-9]+\^|[+-]?\s*\d+)', msg.text)
    if m:
        try:
            raw = m.group(0)
            # –æ—á–∏—â–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–æ–¥–µ ^+^500^ –∏–ª–∏ ^+500^ etc.
            raw_clean = raw.replace("^", "").replace(" ", "")
            amount = parse_amount_token(raw_clean)
            note = msg.text.replace(m.group(0), "").strip()
            add_record_to_chat(chat_id, amount, note, msg.from_user.id)
            update_or_send_today_window(chat_id)
        except Exception as e:
            log_error(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: {e}")
    return

# -----------------------------
# Flask webhook
# -----------------------------
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.get_data().decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

@app.route("/", methods=["GET"])
def index():
    return f"–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç ¬´–§–û¬ª ‚Äî –≤–µ—Ä—Å–∏—è {VERSION} —Ä–∞–±–æ—Ç–∞–µ—Ç", 200

# -----------------------------
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
# -----------------------------
def set_webhook():
    url = f"{APP_URL}/{TOKEN}"
    try:
        bot.remove_webhook()
        time.sleep(0.5)
        bot.set_webhook(url=url)
        log_info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {url}")
    except Exception as e:
        log_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook: {e}")

def schedule_daily_window_creation():
    def task():
        last_day = get_today_key()
        while True:
            try:
                time.sleep(60)
                current_day = get_today_key()
                if current_day != last_day:
                    for chat_id_str in list(data.get("chats", {}).keys()):
                        try:
                            chat_id = int(chat_id_str)
                        except:
                            continue
                        try:
                            update_or_send_today_window(chat_id)
                        except Exception as e:
                            log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–∫–Ω–∞ –Ω–æ–≤–æ–≥–æ –¥–Ω—è –¥–ª—è {chat_id}: {e}")
                    last_day = current_day
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –≤ daily loop: {e}")
                time.sleep(5)
    thread = threading.Thread(target=task, daemon=True)
    thread.start()

# -----------------------------
# –ó–∞–ø—É—Å–∫
# -----------------------------
if __name__ == "__main__":
    set_webhook()
    schedule_daily_window_creation()
    log_info(f"–ë–æ—Ç –§–û –≤–µ—Ä—Å–∏–∏ {VERSION} –∑–∞–ø—É—â–µ–Ω")
    try:
        if OWNER_ID:
            bot.send_message(int(OWNER_ID), f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç! (–≤–µ—Ä—Å–∏—è {VERSION})")
    except Exception as e:
        log_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ: {e}")
    app.run(host="0.0.0.0", port=PORT)